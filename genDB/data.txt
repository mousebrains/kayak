--
-- data tables
--

DROP TABLE IF EXISTS data;
CREATE TABLE data (dataKey INTEGER, -- key into dataSource table 
                   type INTEGER, -- 1 -> flow, 2 -> gauge, 3 -> temperature, ...
                   date INTEGER DEFAULT (strftime('%s', 'now')), -- date of data
                   urlKey INTEGER, -- key into dataURLs table
                   obs DOUBLE, -- numerical observation
                   PRIMARY KEY (dataKey, type, date, urlKey)
                   );
CREATE INDEX keyDateDataIndex ON data(dataKey,date);

DROP TABLE IF EXISTS dataSource;
CREATE TABLE dataSource (dataKey INTEGER PRIMARY KEY AUTOINCREMENT, -- key used in data table
                         name TEXT UNIQUE, -- name from parser
                         date INTEGER DEFAULT 0, -- date of last write
                         gaugeKey INTEGER DEFAULT 0 -- key into gauges table
                        );
CREATE INDEX dataSourceName ON dataSource(name);

DROP TABLE IF EXISTS dataURLs;
CREATE TABLE dataURLs (urlKey INTEGER PRIMARY KEY AUTOINCREMENT, -- key used in data table
                       url TEXT UNIQUE, -- URL used to fetch data
                       date INTEGER DEFAULT 0, -- time last seen
                       parser TEXT, -- name of parser to process this url
                       qRun INTEGER DEFAULT 0, -- should this parser be executed?
                       monthOfYear TEXT DEFAULT '*', -- crontab like month to run
                       dayOfMonth TEXT DEFAULT '*', -- crontab like day of month to run
                       hourOfDay TEXT DEFAULT '*' -- crontab like hour to run
                      );
CREATE INDEX dataURLsName ON dataURLs(url);

DROP TABLE IF EXISTS dataUnknown;
CREATE TABLE dataUnknown (name TEXT, -- parser name
                          urlKey INTEGER, -- url seen at
                          date INTEGER DEFAULT 0, -- time last seen
                          usage INTEGER DEFAULT 0, -- 0=seen, 1=prompted, 2=ignore
                          PRIMARY KEY (name, urlKey));
