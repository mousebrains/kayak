
--
-- rating tables
--

DROP TABLE IF EXISTS rating;
CREATE TABLE rating (ratingKey INTEGER, -- which entry in ratingSource this applies to
                     date INTEGER DEFAULT 0, -- date 
                     urlKey INTEGER, -- key into ratingURLs table
                     flow DOUBLE, -- flow in CFS
                     gauge DOUBLE, -- height in feet
                     PRIMARY KEY(ratingKey, urlKey) 
                    );

DROP TABLE IF EXISTS ratingSource;
CREATE TABLE ratingSource (ratingKey INTEGER PRIMARY KEY AUTOINCREMENT, -- key used in rating table
                           name TEXT UNIQUE, -- name from parser
                           date INTEGER DEFAULT 0, -- date of last write
                           gaugeKey INTEGER DEFAULT 0 -- key into gauges table
                          );
CREATE INDEX ratingSourceName ON ratingSource(name);

DROP TABLE IF EXISTS ratingURLs;
CREATE TABLE ratingURLs (urlKey INTEGER PRIMARY KEY AUTOINCREMENT, -- key used in rating table
                         url TEXT UNIQUE, -- URL used to fetch data
                         date INTEGER DEFAULT 0, -- time last seen
                         parser TEXT, -- name of parser to process this url
                         qRun INTEGER DEFAULT 0, -- should this parser be executed?
                         monthOfYear TEXT DEFAULT '*', -- crontab like month to run
                         dayOfMonth TEXT DEFAULT '*', -- crontab like day of month to run
                         hourOfDay TEXT DEFAULT '*' -- crontab like hour to run
                        );
CREATE INDEX rationgURLsName ON ratingURLs(url);

DROP TABLE IF EXISTS ratingUnknown;
CREATE TABLE ratingUnknown (name TEXT, -- parser name
                            urlKey INTEGER, -- url seen at
                            date INTEGER DEFAULT 0, -- time last seen
                            usage INTEGER DEFAULT 0, -- 0=seen, 1=prompted, 2=ignore
                            PRIMARY KEY (name, urlKey));
